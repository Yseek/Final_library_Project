<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="toolguys.library.library.mapper.admin.AdminMapperPKS">
    <resultMap id="bookDTO" type="toolguys.library.library.dto.admin.BookDTO">
        <id property="bookSeq" column="BOOKSEQ"/>
        <id property="bookTitle" column="BOOKTITLE"/>
        <id property="bookWriter" column="BOOKWRITER"/>
        <id property="bookPub" column="BOOKPUB"/>
        <id property="bookStory" column="BOOKSTORY"/>
        <id property="bookImgName" column="BOOKIMGNAME"/>
        <id property="bookImgPath" column="BOOKIMGPATH"/>
        <id property="bookImgOgn" column="BOOKIMGOGN"/>
        <id property="bookStatus" column="BOOKSTATUS"/>
        <id property="bookCount" column="BOOKCOUNT"/>
        <id property="rentCount" column="RENTCOUNT"/>
    </resultMap>
    <resultMap id="memberDTO" type="toolguys.library.library.dto.admin.MemberDTO">
        <id property="memberSeq" column="MEMBERSEQ"/>
        <id property="memberEmail" column="MEMBEREMAIL"/>
        <id property="memberName" column="MEMBERNAME"/>
        <id property="memberPhone" column="MEMBERPHONE"/>
        <id property="memberAddr" column="MEMBERADDR"/>
        <id property="memberStatus" column="MEMBERSTATUS"/>
        <id property="memberOrAdmin" column="MEMBERORADMIN"/>
    </resultMap>
    <resultMap id="rentCardDTO" type="toolguys.library.library.dto.admin.RentCardDTO">
        <id property="rentCardSeq" column="RENTCARDSEQ"/>
        <id property="memberSeq" column="MEMBERSEQ"/>
    </resultMap>
    <resultMap id="bookrentDTO" type="toolguys.library.library.dto.admin.BookRentDTO">
        <id property="bookRentSeq" column="BOOKRENTSEQ"/>
        <id property="bookRentRDate" column="BOOKRENTRDATE"/>
        <id property="bookRentDDay" column="BOOKRENTDDAY"/>
        <id property="bookRentReturn" column="BOOKRENTRETURN"/>
        <id property="bookTitle" column="BOOKTITLE"/>
        <id property="rentCardSeq" column="RENTCARDSEQ"/>
        <id property="memberSeq" column="MEMBERSEQ"/>
        <id property="memberName" column="MEMBERNAME"/>
        <id property="bookSeq" column="BOOKSEQ"/>
    </resultMap>
    <resultMap id="bookReserveDTO" type="toolguys.library.library.dto.admin.BookReserveDTO">
        <id property="bookReserveSeq" column="BOOKRESERVESEQ"/>
        <id property="bookReservedDay" column="BOOKRESERVEDDAY"/>
        <id property="bookReserveStatus" column="BOOKRESERVESTATUS"/>
        <id property="memberSeq" column="MEMBERSEQ"/>
        <id property="memberName" column="MEMBERNAME"/>
        <id property="bookSeq" column="BOOKSEQ"/>
        <id property="bookTitle" column="BOOKTITLE"/>
    </resultMap>
    <select id="bookList" resultMap="bookDTO">
        select BOOKTITLE, BOOKWRITER, BOOKPUB, COUNT(BOOKSEQ) as BOOKCOUNT, BOOKIMGPATH,
        (select COUNT(case when BOOKSTATUS=1 then BOOKSEQ end) from BOOK b2 where b2.BOOKTITLE=b1.BOOKTITLE and b2.BOOKWRITER=b1.BOOKWRITER and b1.BOOKPUB=b2.BOOKPUB group by b2.BOOKTITLE) as RENTCOUNT
        from BOOK b1 group by BOOKTITLE, BOOKWRITER, BOOKPUB
        order by BOOKTITLE
    </select>
    <select id="bookDetail" parameterType="hashMap" resultMap="bookDTO">
        select BOOKSEQ, BOOKTITLE, BOOKWRITER, BOOKPUB, BOOKSTORY, BOOKIMGPATH, BOOKSTATUS
        from BOOK where BOOKTITLE=#{title} and BOOKWRITER=#{writer} and BOOKPUB=#{pub}
        order by BOOKSEQ
    </select>
    <select id="selectAll" resultType="bookDTO">
        select BOOKTITLE, BOOKWRITER, BOOKPUB, COUNT(BOOKSEQ) as BOOKCOUNT,
        (select COUNT(case when BOOKSTATUS=1 then BOOKSEQ end) from BOOK b2 where b2.BOOKTITLE=b1.BOOKTITLE and b2.BOOKWRITER=b1.BOOKWRITER and b1.BOOKPUB=b2.BOOKPUB group by b2.BOOKTITLE) as RENTCOUNT
        from BOOK b1 group by BOOKTITLE, BOOKWRITER, BOOKPUB
        order by BOOKTITLE
    </select>
    <select id="searchByBookId" parameterType="long" resultType="bookDTO">
        select * from BOOK where BOOKSEQ=#{seq}
    </select>
    <select id="listBySearch" parameterType="hashMap" resultMap="bookDTO">
        select BOOKTITLE, BOOKWRITER, BOOKPUB, COUNT(BOOKSEQ) as BOOKCOUNT,
        (select COUNT(case when BOOKSTATUS=1 then BOOKSEQ end) from BOOK b2 where b2.BOOKTITLE=b1.BOOKTITLE and b2.BOOKWRITER=b1.BOOKWRITER and b1.BOOKPUB=b2.BOOKPUB group by b2.BOOKTITLE) as RENTCOUNT
        from BOOK b1 where ${option} like CONCAT('%', #{keyword}, '%') group by BOOKTITLE, BOOKWRITER, BOOKPUB
        order by BOOKTITLE
    </select>
    <select id="searchAll" parameterType="String" resultMap="bookDTO">
        select BOOKTITLE, BOOKWRITER, BOOKPUB, COUNT(BOOKSEQ) as BOOKCOUNT,
        (select COUNT(case when BOOKSTATUS=1 then BOOKSEQ end) from BOOK b2 where b2.BOOKTITLE=b1.BOOKTITLE and b2.BOOKWRITER=b1.BOOKWRITER and b1.BOOKPUB=b2.BOOKPUB group by b2.BOOKTITLE) as RENTCOUNT
        from BOOK b1 where BOOKTITLE LIKE CONCAT('%', #{keyword}, '%') OR BOOKWRITER LIKE CONCAT('%', #{keyword}, '%') OR BOOKPUB LIKE CONCAT('%', #{keyword}, '%')
        group by BOOKTITLE, BOOKWRITER, BOOKPUB
        order by BOOKTITLE
    </select>
    <select id="searchDetail" parameterType="hashMap" resultMap="bookDTO">
        select BOOKTITLE, BOOKWRITER, BOOKPUB, COUNT(BOOKSEQ) as BOOKCOUNT,
        (select COUNT(case when BOOKSTATUS=1 then BOOKSEQ end) from BOOK b2 where b2.BOOKTITLE=b1.BOOKTITLE and b2.BOOKWRITER=b1.BOOKWRITER and b1.BOOKPUB=b2.BOOKPUB group by b2.BOOKTITLE) as RENTCOUNT
        from BOOK b1 where
        <if test='title != "none" and writer != "none" and pub != "none"'>
            BOOKTITLE LIKE CONCAT('%', #{title}, '%') and BOOKWRITER LIKE CONCAT('%', #{writer}, '%') and BOOKPUB LIKE CONCAT('%', #{pub}, '%')
        </if>
        <if test='title == "none"'>
            BOOKWRITER like CONCAT('%', #{writer}, '%') and BOOKPUB like CONCAT('%', #{pub}, '%')
        </if>
        <if test='writer == "none"'>
            BOOKTITLE like CONCAT('%', #{title}, '%') and BOOKPUB like CONCAT('%', #{pub}, '%')
        </if>
        <if test='pub == "none"'>
            BOOKTITLE like CONCAT('%', #{title}, '%') and BOOKWRITER like CONCAT('%', #{writer}, '%')
        </if>
        group by BOOKTITLE, BOOKWRITER, BOOKPUB
        order by BOOKTITLE
    </select>
    <select id="selectBookInfo" parameterType="hashMap" resultMap="bookDTO">
        select * from BOOK where BOOKTITLE=#{title} and BOOKWRITER=#{writer} and BOOKPUB=#{pub}
    </select>
    <select id="allBookReserve" resultMap="bookReserveDTO">
        select BOOKRESERVESEQ, BOOKRESERVEDDAY, BOOKRESERVESTATUS, (select MEMBERSEQ from MEMBER as m where b.MEMBER_MEMBERSEQ=m.MEMBERSEQ) MEMBERSEQ, (select MEMBERNAME from MEMBER as m where b.MEMBER_MEMBERSEQ=m.MEMBERSEQ) MEMBERNAME,
        BOOK_BOOKSEQ BOOKSEQ, (select BOOKTITLE from BOOK as b2 where b.BOOK_BOOKSEQ=b2.BOOKSEQ) BOOKTITLE from BOOKRESERVE b where BOOKRESERVESTATUS=1
    </select>
    <select id="searchReserve" resultMap="bookReserveDTO">
        select BOOKRESERVESEQ, BOOKRESERVEDDAY, BOOKRESERVESTATUS, (select MEMBERSEQ from MEMBER as m where b.MEMBER_MEMBERSEQ=m.MEMBERSEQ) MEMBERSEQ, (select MEMBERNAME from MEMBER as m where b.MEMBER_MEMBERSEQ=m.MEMBERSEQ) MEMBERNAME,
        BOOK_BOOKSEQ BOOKSEQ, (select BOOKTITLE from BOOK as b2 where b.BOOK_BOOKSEQ=b2.BOOKSEQ) BOOKTITLE from BOOKRESERVE b
        where BOOKRESERVESTATUS=1 and
        <if test='option == "bookSeq"'>
            BOOK_BOOKSEQ=#{keyword} LIMIT 1
        </if>
        <if test='option == "bookReserveSeq"'>
            BOOKRESERVESEQ=#{keyword} LIMIT 1
        </if>
    </select>
    <select id="bookRentList" resultMap="bookrentDTO">
        select BOOKRENTSEQ, BOOK_BOOKSEQ as BOOKSEQ, (select BOOKTITLE from BOOK as b1 where b1.BOOKSEQ=b.BOOK_BOOKSEQ) as BOOKTITLE, BOOKRENTRDATE, BOOKRENTDDAY, BOOKRENTRETURN,
        (select MEMBERNAME from MEMBER m where m.MEMBERSEQ=(select MEMBER_MEMBERSEQ from RENTCARD as r where b.RENTCARD_RENTCARDSEQ=r.RENTCARDSEQ)) MEMBERNAME
        from BOOKRENT b where BOOKRENTRETURN is null
    </select>
    <select id="searchRentList" resultMap="bookrentDTO">
        select BOOKRENTSEQ, BOOK_BOOKSEQ as BOOKSEQ, (select BOOKTITLE from BOOK as b1 where b1.BOOKSEQ=b.BOOK_BOOKSEQ) as BOOKTITLE, BOOKRENTRDATE, BOOKRENTDDAY, BOOKRENTRETURN,
        (select MEMBERNAME from MEMBER m where m.MEMBERSEQ=(select MEMBER_MEMBERSEQ from RENTCARD as r where b.RENTCARD_RENTCARDSEQ=r.RENTCARDSEQ)) MEMBERNAME
        from BOOKRENT b where BOOKRENTRETURN is null and
        <if test='option == "bookSeq"'>
            BOOK_BOOKSEQ=#{keyword} LIMIT 1
        </if>
        <if test='option == "bookRentSeq"'>
            BOOKRENTSEQ=#{keyword} LIMIT 1
        </if>
    </select>
    <update id="updateBookInfo" parameterType="hashMap">
        update BOOK set BOOKTITLE=#{title}, BOOKWRITER=#{writer}, BOOKPUB=#{pub}, BOOKSTATUS=#{status}
        where BOOKSEQ=#{seq}
    </update>
    <update id="updateBookInfoDetail" parameterType="hashMap">
        update BOOK set BOOKTITLE=#{title}, BOOKWRITER=#{writer}, BOOKPUB=#{pub}, BOOKSTATUS=#{status},
        BOOKSTORY=#{bookStory}, BOOKIMGNAME=#{bookImgName}, BOOKIMGPATH=#{bookImgPath}, BOOKIMGOGN=#{boomImgOgn}
        where BOOKSEQ=#{seq}
    </update>
    <update id="statUpdateByRent" parameterType="long">
        update BOOKRESERVE set BOOKRESERVESTATUS=2 where BOOKRESERVESEQ=#{reserveSeq}
    </update>
    <update id="bookUpdateByRent" parameterType="long">
        update BOOK set BOOKSTATUS=3 where BOOKSEQ=#{bookSeq}
    </update>
    <update id="statUpdateByReturn" parameterType="long">
        update BOOKRENT set BOOKRENTRETURN=now() where BOOKRENTSEQ=#{bookRentSeq}
    </update>
    <update id="bookUpdateByReturn" parameterType="long">
        update BOOK set BOOKSTATUS=1 where BOOKSEQ=#{bookSeq}
    </update>
    <update id="statUpdateByCancel" parameterType="long">
        update BOOKRESERVE set BOOKRESERVESTATUS=4 where BOOKRESERVESEQ=#{reserveSeq}
    </update>
    <update id="bookUpdateByCancel" parameterType="long">
        update BOOK set BOOKSTATUS=1 where BOOKSEQ=#{bookSeq}
    </update>
    <update id="bookUpdateByReserve">
        update BOOK set BOOKSTATUS=2 where BOOKSEQ=#{bookSeq}
    </update>
    <insert id="insertRentCard">
        insert into RENTCARD values (0, #{memberSeq})
    </insert>
    <insert id="insertBookRent" parameterType="hashMap">
        insert into BOOKRENT values (0, (select LAST_INSERT_ID() from RENTCARD LIMIT 1), #{bookSeq}, now(), (SELECT DATE_ADD(now(), INTERVAL 7 DAY)), null, 0)
    </insert>
    <insert id="insertBookReserve" parameterType="hashMap">
        insert into BOOKRESERVE values (0, (select MEMBERSEQ from MEMBER where MEMBERSEQ=#{memberSeq}), #{bookSeq}, now(), 1)
    </insert>
    <delete id="deleteBook" parameterType="long">
        delete from BOOK where BOOKSEQ=#{seq}
    </delete>
</mapper>